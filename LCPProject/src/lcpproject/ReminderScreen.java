/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lcpproject;

import classes.*;
import java.awt.Component;
import java.awt.Font;
import java.util.List;
import java.util.ArrayList;
import javax.swing.DefaultListCellRenderer;
import javax.swing.DefaultListModel;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.OK_CANCEL_OPTION;
import javax.swing.ListCellRenderer;
import javax.swing.Renderer;
import static lcpproject.SignUp.sgIN;

/**
 *
 * @author Pedro Botecchi
 */
public class ReminderScreen extends javax.swing.JFrame {

    /**
     * Creates new form ReminderScreen
     */
    static Engine engine = new Engine();
    User username;
    BDFunctions bd = new BDFunctions();
    DefaultListModel<Reminder> model1 = new DefaultListModel<>();
    DefaultListModel<Reminder> model2 = new DefaultListModel<>();
    //private DefaultListModel lista = new DefaltListModel();
    public ReminderScreen(User username) {
        
        initComponents();
        this.username = username;
        
        listReminders();
        //rList.clear();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        HeaderLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        rList1 = new javax.swing.JList<>();
        insertButton = new javax.swing.JButton();
        titleText = new javax.swing.JTextField();
        descText = new javax.swing.JTextField();
        titleLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        modifyButton = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        finishedButton = new javax.swing.JButton();
        unfinishedButton = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        removeReminder = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        rList2 = new javax.swing.JList<>();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("To-Do's");
        setBounds(new java.awt.Rectangle(0, 0, 1280, 720));
        setLocationByPlatform(true);
        setMaximumSize(new java.awt.Dimension(1920, 1080));
        setMinimumSize(new java.awt.Dimension(1280, 720));
        setPreferredSize(new java.awt.Dimension(1280, 720));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        HeaderLabel.setFont(new java.awt.Font("Arial Black", 0, 24)); // NOI18N
        HeaderLabel.setForeground(new java.awt.Color(255, 255, 255));
        HeaderLabel.setText("Your To-Dos");
        getContentPane().add(HeaderLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 50, 180, 40));

        rList1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        rList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rList1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(rList1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 170, 350, 430));

        insertButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        insertButton.setText("Insert");
        insertButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertButtonActionPerformed(evt);
            }
        });
        getContentPane().add(insertButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 300, 110, -1));
        getContentPane().add(titleText, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 170, 240, 30));
        getContentPane().add(descText, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 240, 240, 30));

        titleLabel.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        titleLabel.setForeground(new java.awt.Color(255, 255, 255));
        titleLabel.setText("Title:");
        getContentPane().add(titleLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 140, 240, 30));

        jLabel2.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Description:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 210, -1, -1));

        modifyButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        modifyButton.setText("Modify");
        modifyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyButtonActionPerformed(evt);
            }
        });
        getContentPane().add(modifyButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 300, 100, -1));

        jButton2.setText("Logoff");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1160, 50, -1, -1));

        jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Finished To-Do's");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 130, 160, 20));

        finishedButton.setText(">>>>");
        finishedButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finishedButtonActionPerformed(evt);
            }
        });
        getContentPane().add(finishedButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 280, 80, 40));

        unfinishedButton.setText("<<<<");
        unfinishedButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unfinishedButtonActionPerformed(evt);
            }
        });
        getContentPane().add(unfinishedButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 350, 80, 40));

        jButton3.setBackground(new java.awt.Color(50, 50, 52));
        jButton3.setForeground(new java.awt.Color(102, 153, 255));
        jButton3.setText("Update User's Info");
        jButton3.setBorderPainted(false);
        jButton3.setOpaque(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 600, 240, 30));

        jLabel4.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 380, 230, 210));

        removeReminder.setText("Remove");
        removeReminder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeReminderActionPerformed(evt);
            }
        });
        getContentPane().add(removeReminder, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 450, 80, 40));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("To-Do's");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 130, 60, -1));

        rList2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rList2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(rList2);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 170, 350, 430));

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lcpproject/Background2.png"))); // NOI18N
        getContentPane().add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1280, 700));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void insertButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertButtonActionPerformed
        // TODO add your handling code here:
        String title;
        String description;
        boolean finished = false;
        
        title = titleText.getText();
        description = descText.getText();
        
        titleText.setText("");
        descText.setText("");
        
        engine.add_reminder(title,description,engine.getCurrentUser());
        
        listReminders();
    }//GEN-LAST:event_insertButtonActionPerformed

    private void finishedButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finishedButtonActionPerformed
        // TODO add your handling code here:
        List<Reminder> lst = new ArrayList<Reminder>();
        lst = rList1.getSelectedValuesList();
        
        titleText.setText("");
        descText.setText("");
        
        for(int i=0;i<lst.size();i++){
            lst.get(i).set_finished();
            engine.updateReminder(lst.get(i));
        }
        listReminders();
    }//GEN-LAST:event_finishedButtonActionPerformed

    private void unfinishedButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unfinishedButtonActionPerformed
        // TODO add your handling code here:
                // TODO add your handling code here:
        List<Reminder> lst = new ArrayList<Reminder>();
        lst = rList2.getSelectedValuesList();
        
        titleText.setText("");
        descText.setText("");
        
        for(int i=0;i<lst.size();i++){
            lst.get(i).set_unfinished();
            bd.bdUpdateReminder(lst.get(i));
        }
        listReminders();
    }//GEN-LAST:event_unfinishedButtonActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        UpdateUser upUser = new UpdateUser(engine);
        
        upUser.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void rList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rList1MouseClicked
        // TODO add your handling code here:
        titleText.setText("");
        descText.setText("");
        JList list = (JList)evt.getSource();
        if (evt.getClickCount() == 2) {

            // Double-click detected
            Reminder lst = rList1.getSelectedValue();
            
            titleText.setText(lst.getTitle());
            descText.setText(lst.getDescription());
        }
        rList2.clearSelection();
    }//GEN-LAST:event_rList1MouseClicked

    private void modifyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyButtonActionPerformed
        // TODO add your handling code here:
        Reminder rm1 = rList1.getSelectedValue();
        Reminder rm2 = rList2.getSelectedValue();
        if(rm1 == null && rm2 == null){
            JOptionPane.showMessageDialog(null, "No reminder is Selected (Double click to select)");
        }
        else {
            if(rm1!=null){
                rm1.setTitle(titleText.getText());
                rm1.setDescription(descText.getText());
                engine.updateReminder(rm1);
            }
            else
            {
                rm2.setTitle(titleText.getText());
                rm2.setDescription(descText.getText());
                engine.updateReminder(rm2);
            }
        }
        titleText.setText("");
        descText.setText("");
        listReminders();
    }//GEN-LAST:event_modifyButtonActionPerformed

    private void removeReminderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeReminderActionPerformed
        // TODO add your handling code here:
        List<Reminder> lst = new ArrayList<Reminder>();
        List<Reminder> lst2 = new ArrayList<Reminder>();
        
        lst = rList1.getSelectedValuesList();
        lst2 = rList2.getSelectedValuesList();
        
        if(lst.isEmpty() && !lst2.isEmpty()){
            lst = lst2;
        } else if(!lst.isEmpty() && !lst2.isEmpty())
            lst.addAll(lst2);
 
        
        int op = JOptionPane.showConfirmDialog(null, "Confirm reminders exclusion?", "DELETE REMINDER", OK_CANCEL_OPTION);
        
        if(op==0){
            for(int i=0;i<lst.size();i++){
                lst.get(i).set_unfinished();
                bd.bdRemoveReminder(lst.get(i));
            }
        }

        listReminders(); 
    }//GEN-LAST:event_removeReminderActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        SignIn sgIN = new SignIn();
        sgIN.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void rList2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rList2MouseClicked
        // TODO add your handling code here:
        titleText.setText("");
        descText.setText("");
        JList list = (JList)evt.getSource();
        if (evt.getClickCount() == 2) {
            // Double-click detected
            Reminder lst = rList2.getSelectedValue();
            
            titleText.setText(lst.getTitle());
            descText.setText(lst.getDescription());
        }
        rList1.clearSelection();
    }//GEN-LAST:event_rList2MouseClicked

    public void listReminders(){
        ArrayList<Reminder> rm;
        model1.clear();
        model2.clear();
        rm = bd.bdLoadReminders(this.username);

        for(int i=0;i<rm.size();i++){
            String show = "Title: "+rm.get(i).getTitle() + "   |   Description: " + rm.get(i).getDescription();
            if(!rm.get(i).getFinished())
                model1.addElement(rm.get(i));
            else
                model2.addElement(rm.get(i));
        }
        
        rList1.setCellRenderer(new JListRenderer());
        rList2.setCellRenderer(new JListRenderer());
        rList1.setModel(model1);
        rList2.setModel(model2);
        
    }
    @Override
    public String toString() {
        return "Title : ";
    }
        /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReminderScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReminderScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReminderScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReminderScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ReminderScreen(engine.getCurrentUser()).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel HeaderLabel;
    private javax.swing.JLabel background;
    private javax.swing.JTextField descText;
    private javax.swing.JButton finishedButton;
    private javax.swing.JButton insertButton;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton modifyButton;
    private javax.swing.JList<Reminder> rList1;
    private javax.swing.JList<Reminder> rList2;
    private javax.swing.JButton removeReminder;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JTextField titleText;
    private javax.swing.JButton unfinishedButton;
    // End of variables declaration//GEN-END:variables
}

class JListRenderer extends DefaultListCellRenderer implements ListCellRenderer<Object>{
    public JListRenderer(){
        setOpaque(true);
        
    }

    @Override
    public Component getListCellRendererComponent(JList<?> list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
        super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
        //Addign To Value That is passed
        Reminder rm = (Reminder) value;
        //setText("Title : "+rm.getTitle()+"  |  Description : "+rm.getDescription());
        String labelText = "<html>Title :" + rm.get_title() + "<br/>Description: " + rm.getDescription();
        Font  f  = new Font(Font.SERIF, Font.BOLD,  14);
        setFont(f);
        setText(labelText);
        
        
        return this;
    }
}
